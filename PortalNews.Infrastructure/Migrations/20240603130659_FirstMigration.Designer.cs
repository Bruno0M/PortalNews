// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortalNews.Infrastructure.Data;

#nullable disable

namespace PortalNews.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240603130659_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortalNews.Domain.Entities.Journalist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_salt");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_journalists", (string)null);
                });

            modelBuilder.Entity("PortalNews.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<int>("JournalistId")
                        .HasColumnType("integer")
                        .HasColumnName("journalist_id");

                    b.Property<string>("NewsBody")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("news_body");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("date")
                        .HasColumnName("published_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("TypeNewsId")
                        .HasColumnType("integer")
                        .HasColumnName("type_news_id");

                    b.HasKey("Id");

                    b.HasIndex("JournalistId");

                    b.HasIndex("TypeNewsId");

                    b.ToTable("tb_news", (string)null);
                });

            modelBuilder.Entity("PortalNews.Domain.Entities.TypeNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JournalistId")
                        .HasColumnType("integer")
                        .HasColumnName("journalist_id");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_name");

                    b.HasKey("Id");

                    b.HasIndex("JournalistId");

                    b.ToTable("tb_types_news", (string)null);
                });

            modelBuilder.Entity("PortalNews.Domain.Entities.News", b =>
                {
                    b.HasOne("PortalNews.Domain.Entities.Journalist", "Journalist")
                        .WithMany("News")
                        .HasForeignKey("JournalistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortalNews.Domain.Entities.TypeNews", "TypeNews")
                        .WithMany()
                        .HasForeignKey("TypeNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journalist");

                    b.Navigation("TypeNews");
                });

            modelBuilder.Entity("PortalNews.Domain.Entities.TypeNews", b =>
                {
                    b.HasOne("PortalNews.Domain.Entities.Journalist", "Journalist")
                        .WithMany()
                        .HasForeignKey("JournalistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journalist");
                });

            modelBuilder.Entity("PortalNews.Domain.Entities.Journalist", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
